plugins {
	id 'fabric-loom' version '0.10-SNAPSHOT'
	id 'maven-publish'
	id 'io.github.juuxel.loom-quiltflower-mini' version '1.+'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	maven { url = "https://api.modrinth.com/maven" }
	maven { url = "https://maven.shedaniel.me/" }
	maven { url = "https://maven.terraformersmc.com/" }
	maven { url = "https://aperlambda.github.io/maven" }
	maven { url = "https://ladysnake.jfrog.io/artifactory/mods" }
	maven { url = "https://maven.kotlindiscord.com/repository/terraformers/" }
	maven { url = "https://cursemaven.com" }
	maven { url 'https://jitpack.io' }
}

dependencies {
	minecraft("com.mojang:minecraft:${project.minecraft_version}")
	mappings("net.fabricmc:yarn:${project.minecraft_version}+build.${project.mappings_version}:v2")
	modImplementation("net.fabricmc:fabric-loader:${project.loader_version}")
	modImplementation("net.fabricmc.fabric-api:fabric-api:${project.fabric_version}")
	modImplementation("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}") { exclude(group: "net.fabricmc.fabric-api") }

	modImplementation("io.github.ladysnake:PlayerAbilityLib:${project.pal_version}")
	modImplementation("com.github.Draylar.omega-config:omega-config-base:${project.omega_config_version}")
	modImplementation("curse.maven:identity-391390:${project.identity_version}")
	modImplementation("dev.emi:trinkets:${project.trinkets_version}")
	modImplementation("com.terraformersmc:modmenu:${project.mod_menu_version}")
	modImplementation("maven.modrinth:lazydfu:0.1.2")
	modImplementation("maven.modrinth:here-be-no-dragons:1.0.0")
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"

	it.options.release = 17
}

java {
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	repositories {
		String suffix = System.getenv().PUBLISH_SUFFIX // 'releases' or 'snapshots'
		if (suffix == null || suffix.isEmpty()) {
			System.out.println("Failed to publish to maven!")
			return
		}
		maven {
			url = "https://maven.devos.community/${suffix}/"
			credentials {
				username = System.getenv().MAVEN_USER
				password = System.getenv().MAVEN_PASS
			}
			authentication { basic(BasicAuthentication) }
		}
	}
}
